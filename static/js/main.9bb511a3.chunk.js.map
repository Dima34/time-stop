{"version":3,"sources":["Components/styles.module.scss","Components/Timer.jsx","App.jsx","index.js"],"names":["module","exports","Timer","hours","minutes","seconds","onStartClick","onStopClick","onWaitClick","onResetClick","className","styles","timerContainer","timer","clock","buttons","onClick","e","func","target","hasAttribute","removeAttribute","setAttribute","setTimeout","DblClickCheck","sub","Subject","App","useState","h","m","s","time","setTime","secondsIntoTime","_hours","Math","trunc","_minutes","_seconds","addZeroBeforeNum","number","numInString","toString","length","useEffect","pipe","startWith","isPaused","value","scan","acc","curr","Object","assign","tap","val","switchMap","state","NEVER","interval","subscribe","next","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,MAAQ,sBAAsB,QAAU,wBAAwB,MAAQ,wB,iMCkF3HC,EA/ED,SAAC,GAAqF,IAApFC,EAAmF,EAAnFA,MAAOC,EAA4E,EAA5EA,QAASC,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAiB7E,OACI,qBAAKC,UAAaC,IAAOC,eAAzB,SAEI,0BAASF,UAAWC,IAAOE,MAA3B,UAEI,sBAAKH,UAAWC,IAAOG,MAAvB,UAEI,oCACI,4BAAIX,IACJ,yCAGJ,qCAEA,oCACI,4BAAIC,IACJ,2CAGJ,qCAEA,oCACI,4BAAIC,IACJ,8CAKR,sBAAKK,UAAWC,IAAOI,QAAvB,UACI,wBACIC,QAAS,WAAKV,KADlB,mBAMA,wBACIU,QAAS,WAAKT,KADlB,kBAMA,wBACIS,QAAS,SAACC,IAzDR,SAACA,EAAEC,GACrB,IAAMC,EAASF,EAAEE,OAEdA,EAAOC,aAAa,YACnBF,IACAC,EAAOE,gBAAgB,aAEvBF,EAAOG,aAAa,UAAW,IAC/BC,YAAW,WACPJ,EAAOE,gBAAgB,aACxB,MA+CwBG,CAAcP,EAAET,IADnC,kBAMA,wBACIQ,QAAS,WAAKP,KADlB,4BC/DdgB,EAAM,IAAIC,IAoEDC,MAlEf,WACE,MAAwBC,mBAAS,CAACC,EAAG,KAAMC,EAAG,KAAMC,EAAG,OAAvD,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAkB,SAAC7B,GACvB,IAAI8B,EAASC,KAAKC,MAAMhC,EAAU,MAC9BiC,EAAWF,KAAKC,MAAMhC,EAAU,IAAe,GAAT8B,EACtCI,EAAWlC,EAAmB,KAAT8B,EAA2B,GAAXG,EAEzC,MAAO,CAACT,EAAIW,EAAiBL,GAASL,EAAIU,EAAiBF,GAAWP,EAAIS,EAAiBD,KAGvFC,EAAmB,SAASC,GAChC,IAAIC,EAAcD,EAAOE,WACzB,OAA8B,IAAvBD,EAAYE,OAAZ,WAA+BF,GAAgBA,GAmCxD,OAhCAG,qBAAU,WACRpB,EAAIqB,KACFC,YAAU,CAACC,UAAS,EAAMC,MAAM,IAChCC,aAAK,SAACC,EAAKC,GAAN,OAAeC,OAAOC,OAAOH,EAAIC,MACtCG,aAAI,SAACC,GAAOvB,EAAQC,EAAgBsB,EAAIP,WACxCQ,aAAU,SAACC,GAAD,OAAYA,EAAMV,SAAWW,IAAQC,YAAS,KAAMd,KAC5DS,aAAI,WACFG,EAAMT,QACNhB,EAAQC,EAAgBwB,EAAMT,gBAGjCY,cAEF,IAqBD,qBAAKnD,UAAU,MAAf,SACE,cAAC,EAAD,CACEP,MAAS6B,EAAKH,EACdzB,QAAW4B,EAAKF,EAChBzB,QAAW2B,EAAKD,EAChBzB,aAvBe,WACnBmB,EAAIqC,KAAK,CAACd,UAAU,KAuBhBxC,YAhBc,WAClBiB,EAAIqC,KAAK,CAACd,UAAU,KAgBhBzC,YArBc,WAClBkB,EAAIqC,KAAK,CAACd,UAAU,EAAMC,MAAO,KAqB7BxC,aAde,WACnBgB,EAAIqC,KAAK,CAACb,MAAO,UChDrBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9bb511a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"styles_timerContainer__1IfE4\",\"timer\":\"styles_timer__l5fyc\",\"buttons\":\"styles_buttons__2X7PU\",\"clock\":\"styles_clock__z9HjF\"};","import React, { PureComponent } from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\n\r\nconst Timer = ({hours, minutes, seconds, onStartClick, onStopClick, onWaitClick, onResetClick}) => { \r\n\r\n    const DblClickCheck = (e,func) =>{\r\n        const target = e.target\r\n\r\n        if(target.hasAttribute(\"dbcheck\")){\r\n            func();\r\n            target.removeAttribute(\"dbcheck\")\r\n        } else{\r\n            target.setAttribute(\"dbcheck\", \"\");\r\n            setTimeout(()=>{\r\n                target.removeAttribute(\"dbcheck\")\r\n            }, 300);\r\n        }       \r\n\r\n    }\r\n    \r\n    return (\r\n        <div className = {styles.timerContainer}>\r\n\r\n            <section className={styles.timer}>\r\n\r\n                <div className={styles.clock}>\r\n\r\n                    <section>\r\n                        <p>{hours}</p>\r\n                        <p>Hours</p>\r\n                    </section>\r\n\r\n                    <span>:</span>\r\n\r\n                    <section>\r\n                        <p>{minutes}</p>\r\n                        <p>Minutes</p>\r\n                    </section>\r\n\r\n                    <span>:</span>\r\n\r\n                    <section>\r\n                        <p>{seconds}</p>\r\n                        <p>Seconds</p>\r\n                    </section>\r\n                    \r\n                </div>\r\n\r\n                <div className={styles.buttons}>\r\n                    <button \r\n                        onClick={()=>{onStartClick()}}\r\n                    >\r\n                        Start\r\n                    </button>\r\n\r\n                    <button \r\n                        onClick={()=>{onStopClick()}} \r\n                    >\r\n                        Stop\r\n                    </button>\r\n\r\n                    <button \r\n                        onClick={(e)=>{DblClickCheck(e,onWaitClick)}} \r\n                    >\r\n                        Wait\r\n                    </button>\r\n                    \r\n                    <button \r\n                        onClick={()=>{onResetClick()}}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n\r\n            </section>\r\n\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default Timer\r\n","import { useEffect, useState } from 'react';\nimport { Subject, interval, NEVER, switchMap, scan, tap, startWith } from \"rxjs\";\nimport './App.scss';\nimport Timer from './Components/Timer';\n\nconst sub = new Subject();\n\nfunction App() {\n  const [time, setTime] = useState({h: '00', m: \"00\", s: '00'}) \n  \n  const secondsIntoTime = (seconds)=>{\n    let _hours = Math.trunc(seconds / 3600);\n    let _minutes = Math.trunc(seconds / 60) - _hours * 60;\n    let _seconds = seconds - _hours * 3600 - _minutes * 60;\n\n    return {h : addZeroBeforeNum(_hours), m : addZeroBeforeNum(_minutes), s : addZeroBeforeNum(_seconds)}\n  }\n\n  const addZeroBeforeNum = function(number) {\n    let numInString = number.toString();\n    return numInString.length === 1 ? `0${numInString}` : numInString;\n  }\n\n  useEffect(() => {\n    sub.pipe(\n      startWith({isPaused:true, value:0}),\n      scan((acc, curr) => Object.assign(acc,curr)),\n      tap((val)=>{setTime(secondsIntoTime(val.value));}),\n      switchMap((state) =>  state.isPaused ? NEVER : interval(1000).pipe(\n        tap(() => {\n          state.value ++;\n          setTime(secondsIntoTime(state.value));\n        })\n      )\n    )).subscribe() \n\n  }, []);\n\n  \n  const onStartClick = () =>{\n    sub.next({isPaused: false})\n  }\n\n  const onStopClick = ()=>{\n    sub.next({isPaused: true, value: 0})\n  }\n\n  const onWaitClick = () => {\n    sub.next({isPaused: true})\n  }\n\n  const onResetClick = () => {\n    sub.next({value: 0})\n  }\n\n  return (\n\n    <div className=\"App\">\n      <Timer \n        hours = {time.h}\n        minutes = {time.m}\n        seconds = {time.s}\n        onStartClick = {onStartClick}\n        onWaitClick = {onWaitClick}\n        onStopClick = {onStopClick}\n        onResetClick = {onResetClick}\n      />\n\n    </div>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}